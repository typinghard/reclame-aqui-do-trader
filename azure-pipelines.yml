trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - /azure-pipelines.yml
      - /README.md
  
pr:
  branches:
    include:
    - '*'
  paths:
    exclude:
      - /azure-pipelines.yml
      - /README.md

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  prId: $(System.PullRequest.pullRequestNumber)
  prPipeline: $[eq(variables['Build.Reason'], 'PullRequest')]

stages:
- stage: PrepareApp
  displayName: 'Build, Test & Publish'
  jobs:
  - job:
    displayName: Build
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet'

    - task: NuGetCommand@2
      displayName: 'Restore NuGet packages from Solution'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Build'
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      displayName: 'Run Unit Tests'
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'

- stage: DeployPR
  displayName: 'Deploy PR'
  condition: and(succeeded(), eq(variables.prPipeline, 'true'))
  jobs:
  - job: CreateAzureResources
    displayName: 'Create Azure Resources'
    variables:
    - group: RADT-Secrets
    steps:    
    - script: |
        echo "System.PullRequest.pullRequestNumber: $(System.PullRequest.pullRequestNumber)"
        echo "prId: $(prId)"
    - task: AzureCLI@2
      displayName: 'Deploy infrastructure with ARM templates'
      inputs:
        azureSubscription: 'Minha Assinatura'
        scriptType: 'ps'
        scriptLocation: 'scriptPath'
        scriptPath: '$(build.SourcesDirectory)\src\ReclameAquiDoTrader.Environment.ARMTemplate\DeployInfrastructure.ps1'
        arguments: -appPrefix "app-typinghard-radt" -environment "$(System.PullRequest.pullRequestNumber)" -templatesLocation "$(build.SourcesDirectory)\src\ReclameAquiDoTrader.Environment.ARMTemplate" -azureStorageConnectionString "$(AzureStorage:ConnectionString)" -ravenDbConnectionConfigsCertificateDownloadPath "$(RavebDBConnectionConfigs:Certificate:DownloadPath)" -ravenSettingsCertFilePath "$(RavenSettings:CertFilePath)" -ravenSettingsCertPassword "$(RavenSettings:CertPassword)" -ravenSettingsDatabaseName "$(RavenSettings:DatabaseName)" -ravenSettingsUrl "$(RavenSettings:Urls:0)"
  - job: Deploy
    dependsOn: CreateAzureResources
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: 'Download the build artifacts'
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          downloadPath: '$(build.artifactstagingdirectory)'
      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Minha Assinatura'
          appType: 'webApp'
          WebAppName: 'app-typinghard-radt-$(System.PullRequest.pullRequestNumber)'
          packageForLinux: '$(build.artifactstagingdirectory)/drop/*.zip'